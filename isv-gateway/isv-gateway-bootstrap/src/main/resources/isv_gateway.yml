openapi: "3.0.2"
info:
  title: ISV 网关API
  version: "1.0"
servers:
  - url: http://isvgateway.workplus.io:8080/v1
    description: 测试服务器
paths:
  # ==== clients ======
  # 申请token
  /api/token:
    post:
      tags:
        - "clients"
      summary: 申请accessToken
      description: 申请一个accessToken，这是后续调用其它API的权限基础 <br/>
        调用api都需要在header中，传入accessToken值
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: 需要申请token的clientId
                clientSecret:
                  type: string
                  description: 需要申请token的clientSecret
                domainId:
                  type: string
                  description: 域ID
                orgCode:
                  type: string
                  description: 组织CODE
                grantType:
                  type: string
                  default: "client_credentials"
                  enum:
                    - "client_credentials"
                  description: 当前只支持client_credentials一种方式，取固定值
              required:
                - "clientId"
                - "clientSecret"
                - "grantType"

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"

        "400":
          $ref: "#/components/responses/errorResponse"
  #查询指定clients的配置信息
  /clients/{clientId}:
    parameters:
      - name: clientId
        in: path
        required: true
        description: 传入客户ID
        schema:
          type: string
    get:
      tags:
        - "clients"
      summary: 查询一个client信息
      description: 这是给client调用的，可以查询到自己client的相关信息<br/>
                   这个接口只允许查询到自己的

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client"
        400:
          $ref: "#/components/responses/errorResponse"

        # 重置client secret
    patch:
      tags:
        - "clients"
      summary: 更新client的部分设置
      description: 这个接口是部分更新接口，你只需要传入你想要更新的字段就行。没有传的不会更新。<br/>
                   支持更新的字段见body,其中extra中的信息需要传全部的值 <br/>
                   这个接口仅支持更新自己的，不支持更新别人的 </br>
                   重置client的密钥不能使用此接口
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 更新client的名称
                description:
                  type: string
                  description: 更新应用描述
                callback:
                  type: string
                  description: 更新callback
                extra:
                  oneOf:
                    - $ref: "#/components/schemas/extraForWorkWeiXin"
                    - $ref: "#/components/schemas/extraForWorkPlusISV"
                    - $ref: "#/components/schemas/extraForWorkPlus"
                  description: extra是全量更新，不能只填写其中一个属性这种方式

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client"
        400:
          $ref: "#/components/responses/errorResponse"
  #重置client的密钥
  /clients/clientSecret:
    patch:
      tags:
        - "clients"
      summary: 重置一个client的secret
      description: 通过此api来重置client的secret <br/>
                   这个接口仅支持更新自己的，不支持更新别人的
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: 需要重置的clientId
                clientSecret:
                  type: string
                  description: 原clientSecret
              required:
                - "clientId"
                - "clientSecret"
              example:
                clientId: 1Vdq19UzefUhjbSMnNx7mBoMVZJDsaZm
                clientSecret: 9DSN4N14vEAuFjHNeDHWh4V8gtPzaOQO
#  # 刷新token
#  /clients/refreshToken:
#    post:
#      tags:
#        - "clients"
#      summary: 刷新accessToken
#      description: 刷新accessToken，在accssToken过期前需要主动刷新accessToken
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object
#              properties:
#                clientId:
#                  type: string
#                  description: 需刷新token的clientId
#                refreshToken:
#                  type: string
#                  description: 刷新token
#
#      responses:
#        "200":
#          description: OK
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/tokenResponse"
#        "400":
#          $ref: "#/components/responses/errorResponse"
  # 注销token
#  /clients/{clientId}/token/{accessToken}:
#    delete:
#      tags:
#        - "clients"
#      summary: 请求注销一个accessToken
#      parameters:
#        - name: clientId
#          in: path
#          required: true
#          description: 需要注销的clientId
#          schema:
#            type: string
#        - name: accessToken
#          in: path
#          required: true
#          description: 需要注销的clientId
#          schema:
#            type: string
#
#      responses:
#        "204":
#          description: OK
#        "400":
#          $ref: "#/components/responses/errorResponse"

  # ===== 组织 =======
  # 查询单个组织信息
  /organizations/{orgCode}?orgId={orgId}:
    get:
      tags:
        - "组织"
      summary: 获取指定组织的详情
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
          description: 组织OrgCode码，必传
        - name: orgId
          in: query
          required: false
          schema:
            type: string
          description: 如果传空，则返回当前组织根组织信息
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organization"
        400:
          $ref: "#/components/responses/errorResponse"
  # 查询组织下的子部门
  /organizations/{orgCode}/children?orgId={orgId}&limit={limit}&skip={skip}:
    get:
      tags:
        - "组织"
      summary: 获取指定组织下的子组织
      description: 查询指定部门下的子部门信息，这个接口只返回部门，如需雇员或雇员+部门请使用其它接口<br/>
                   <font color='red'>这是个分页接口，没有一次性查出所有子组织的接口</font><br/>
                   如果返回的条数等于指定的每页数额，则表明需要查询下一页
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
          description: 组织OrgCode码，必传
        - name: orgId
          in: query
          required: false
          schema:
            type: string
          description: 如果传空，则返回当前组织根组织信息
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          description: 指定每一页的组织数，不传默认为50
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: 查询的开始数

      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/organization"
        400:
          $ref: "#/components/responses/errorResponse"
  # 查询组织下的雇员
  /organizations/{orgCode}/employees?orgId={orgId}&limit={limit}&skip={skip}:
    get:
      tags:
        - "组织"
      summary: 获取组织下的雇员信息
      description: 此接口会返回指定部门下的雇员信息,这个接口只包含雇员信息
                   <font color='red'>这是个分页接口，没有一次性查出所有雇员数</font><br/>
                   如果返回的条数等于指定的每页数额，则表明需要查询下一页
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
          description: 组织OrgCode码，必传
        - name: orgId
          in: query
          required: false
          schema:
            type: string
          description: 如果传空，则返回当前组织根组织信息
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 50
          description: 指定每一页的组织数，不传默认为50
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: 查询的开始数
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        400:
          $ref: "#/components/responses/errorResponse"
  # 查询组织下的部门+雇员明细
  /organizations/{orgId}/details:
    get:
      tags:
        - "组织"
      summary: 获取组织的部门与雇员
      description: 这个接口可以获取组织的部门与雇员两个信息，如果只需要其中的任何一个，可以使用其它接口
      parameters:
        - name: orgId
          in: path
          required: false
          schema:
            type: string
          description: 如果传空，则返回当前组织根组织信息
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  employees:
                    type: array
                    items:
                      $ref: "#/components/schemas/employee"
                    description: 雇员信息
                  children:
                    type: array
                    items:
                      $ref: "#/components/schemas/organization"
                    description: 部门信息
        400:
          $ref: "#/components/responses/errorResponse"

  # ===== 雇员 =======
  # 查询单个雇员详情
  /organizations/{orgCode}/employees/{employeeId}:
    get:
      tags:
        - "雇员"
      summary: 获取指定雇员的信息
      description: 传入雇员ID，查询一个指定的雇员信息
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
          description: 组织OrgCode码，必传
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employee"
        400:
          $ref: "#/components/responses/errorResponse"
  # 查询多个雇员
  /organizations/{orgCode}/employeesBatch?userIds={userIds}:
    get:
      tags:
        - "雇员"
      summary: 查询多个雇员
      description: 传入一批雇员ID，返回多个雇员ID信息，限制每次最多100
      parameters:
        - name: orgCode
          in: path
          required: true
          schema:
            type: string
          description: 组织OrgCode码，必传
        - name: userIds
          in: query
          required: true
          schema:
            type: string
          description: 传入多个雇员信息，以逗号分隔
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        400:
          $ref: "#/components/responses/errorResponse"
  # 搜索雇员
  /organizations/{orgCode}/employeesSearch?query={query}:
    get:
      tags:
        - "雇员"
      summary: 搜索雇员
      description: 根据username来搜索雇员，不能传空
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: 搜索字符，传入此值，表示查询符合条件的雇员

      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/employee"
        400:
          $ref: "#/components/responses/errorResponse"

  # ===== 媒体 =======
  # 上传一个媒体文件
  /medias:
    post:
      tags:
        - "媒体"
      summary: 上传一个媒体
      description: 上传一个文件到媒体中心
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileDigest:
                  type: string
                  description: 上传媒体的MD5码值
                fileSize:
                  type: integer
                  description: 文件大小
                fileName:
                  type: string
                  description: 文件名称
                file:
                  type: string
                  format: binary

      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  mediaId:
                    type: string
                    description: 媒体ID
        400:
          $ref: "#/components/responses/errorResponse"
  # 下载一个媒体文件
  /medias/{mediaId}:
    get:
      tags:
        - "媒体"
      summary: 下载媒体文件
      parameters:
        - name: mediaId
          required: true
          schema:
            type: string
          description: 媒体ID
      responses:
        200:
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        400:
          $ref: "#/components/responses/errorResponse"

  # ===== 消息 =======
  # 发送消息
  /message/send:
    post:
      tags:
        - "消息"
      summary: 推送消息
      description: 推送消息的API，支持文本，图片，文件，语音，模板消息（WorkPlus专有),卡片消息(微信专用), markdown消息(微信专用)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forAll:
                  type: boolean
                  description: 是否推送所有人员(关注此app范围内)
                  default: false
                toUserList:
                  type: array
                  default: 推送的用户标识集合
                  items:
                    type: string
                toOrgList:
                  type: array
                  default: 推送的组织ID集合
                  items:
                    type: string
                body:
                  oneOf:
                    - $ref: "#/components/schemas/textMessageBody"
                    - $ref: "#/components/schemas/imageMessageBody"
                    - $ref: "#/components/schemas/voiceMessageBody"
                    - $ref: "#/components/schemas/fileMessageBody"
                    - $ref: "#/components/schemas/textcardMessageBody"
              required:
                - body


      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  invalidUser:
                    type: string
                    description: 无效的用户,如"userid1|userid2",只要有一个发送成功，则返回200
                  invalidParty:
                    type: string
                    description: 无效的部门
          400:
            $ref: "#/components/responses/errorResponse"
        400:
          $ref: "#/components/responses/errorResponse"

  # ===== 应用 =======
  # 获取应用管理员
  /app/admins:
    get:
      tags:
        - "应用"
      summary: 获取应用管理员
      description: 获取到此应用的管理员
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          $ref: "#/components/responses/errorResponse"

   #获取一个应用明细
  # 获取应用详情
  /app/detail:
    get:
      tags:
        - "应用"
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
            description: 应用
      summary: 获取一个应用的详情
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  appId:
                    type: string
                    description: appId
                  name:
                    type: string
                    description: app名称
                  icon:
                    type: string
                    description: 应用的图标ID

        400:
          $ref: "#/components/responses/errorResponse"
  # ==== admin ======
  /admin/clients:
    post:
      tags:
        - "管理"
      summary: 请求创建一个网关client
      description: 当前支持WorkPlus_ISV,WorkPlus以及企业微信三种类型 \n
        这是个管理接口
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientName:
                  type: string
                  description: client名称
                clientType:
                  type: string
                  description: 客户类型
                  enum:
                    - WorkPlusISV
                    - WorkPlusApp
                    - WorkWeiXin
                callback:
                  type: string
                  description: 回调URL
                description:
                  type: string
                  description: 对应用的描述
                extra:
                  oneOf:
                    - $ref: "#/components/schemas/extraForWorkWeiXin"
                    - $ref: "#/components/schemas/extraForWorkPlusISV"
                    - $ref: "#/components/schemas/extraForWorkPlus"
              required:
                - clientName
                - clientType
                - callback
                - extra
      responses:
        "200":
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/client"
              example:
                clientId: i03VPeHDHpda7PlVuKwaCBqFCSbehTgG
                name: 测试应用
                clientSecret: vQGWBea4xcC4KlqByAgfwylxG7oFgys6
                description: 这是一个示例应用的详细说明，你在这里可以描述更多应用的信息

        "400":
          $ref: "#/components/responses/errorResponse"

components:
  schemas:
    # 文本消息BODY
    textMessageBody:
      type: object
      description: 文本消息BODY
      properties:
        msgType:
          type: string
          enum:
            - TEXT
          description: TEXT表示推送文本
        content:
          type: string
          default: 推送的文本消息内容'
    # 图片消息BODY
    imageMessageBody:
      type: object
      description: 图片消息BODY
      properties:
        msgType:
          type: string
          enum:
            - IMAGE
          description: IMAGE表示推送图片
        mediaId:
          type: string
          description: 图片mediaId
        isGif:
          type: boolean
          default: false
          description: 是否GIT，默认false
        height:
          type: number
          description: 图片高度
        width:
          type: number
          description: 图片宽度
    # 语音消息BODY
    voiceMessageBody:
      type: object
      description: 语音消息BODY
      properties:
        msgType:
          type: string
          enum:
            - VOICE
          description: VOICE表示推送文本
        mediaId:
          type: string
          description: 语音的媒体ID
        duration:
          type: int
          description: 语音长度
    # 文件消息BODY
    fileMessageBody:
        type: object
        description: 文件消息BODY
        properties:
          msgType:
            type: string
            enum:
              - FILE
            description: FILE表示推送文件
          name:
            type: string
            description: 文件名
          mediaId:
            type: string
            description: 文件媒体ID
          size:
            type: int
            description: 文件大小
    # 文本卡片消息BODY （微信专用）
    textcardMessageBody:
      type: object
      description: 消息卡片消息BODY（微信专用）
      properties:
        msgType:
          type: string
          enum:
            - TEXTCARD
          description: TEXTCARD表示推送文本卡片
        title:
          type: string
          description: 卡片标题
        content:
          type: string
          description: 卡片内容
        url:
          type: string
          description: 跳转URL
        btntxt:
          type: string
          description: 按钮标题
    # 创建ISV附加属性（WeiXin)
    extraForWorkWeiXin:
      type: object
      description: 填写必要的属性，当clientId类型为Work_WeiXin时必填
      properties:
        corpid:
          type: string
          description: 企业微信中的corpid
        providerSecret:
          type: string
          description: 第三方应用的ProviderSecret
        suiteId:
          type: string
          description: 第三方应用ID
        suiteSecret:
          type: string
          description: 第三方应用密钥
        token:
          type: string
          description: 回调配置中的token
        encodingAESKey:
          type: string
          description: 回调配置中的encodingAESKey
      required:
        - corpid
        - providerSecret
        - suiteId
        - suiteSecret
        - token
        - encodingAESKey
    # 创建ISV附加属性 （ISV）
    extraForWorkPlusISV:
      type: object
      description: 填写必要的属性,当clientId类型为WorkPlus_Isv时必填
      properties:
        suiteKey:
          type: string
          description: WorkPlus ISV套件key
        suiteSecret:
          type: string
          description: WorkPlus ISV套件secret
        vendorKey:
          type: string
          description: WorkPlus ISV供应商KEY
        appId:
          type: string
          description: WorkPlus ISV的AppId
        token:
          type: string
          description: 套件的TOKEN
        encryptSecret:
          type: string
          description: 数据加密密钥
        isvApi:
          type: string
          description: string
      required:
        - suiteKey
        - suiteSecret
        - vendorkey
        - appId
        - token
        - encrptSecret

    # 创建ISV附加属性 (WorkPlus本地)
    extraForWorkPlus:
      type: object
      description: WorkPlus本地附加属性
      properties:
        appKey:
          type: string
          description: WorkPlus内部应用(非ISV)的appKey
        appSecret:
          type: string
          description: WorkPlus应用的clientSecret
        domainId:
          type: string
          description: 域ID
        api:
          type: string
          description: 部署的WorkPlus的后台API地址
        ownerId:
          type: string
          description: 组织ID
      required:
        - appKey
        - appSecret
        - domainId
        - api
        - ownerId
    # 通用错误响应
    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          description: 错误码
        errorMsg:
          type: string
          description: 错误详细描述
    # client模型
    client:
      type: object
      properties:
        clientId:
          type: string
          description: clientId，全局唯一，只支持字母，数字以及下划线
        clientSecret:
          type: string
          description: 系统生成的clientSecret
        name:
          type: string
          description: client的名字
        callback:
          type: string
          description: 回调地址
        description:
          type: string
          description: client的详细描述
        extra:
          type: object
    # token请求响应，在请求token及刷新token时返回
    tokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: 生成的access token
        accessExpiredIn:
          type: integer
          description: accessToken过期时间，单位（豪秒)
    # 组织
    organization:
      type: object
      properties:
        orgId:
          type: string
          description: 组织Id
        path:
          type: string
          description: 组织路径
        name:
          type: string
          description: 组织名称
        logo:
          type: string
          description: 组织头像
    # 雇员职位
    employeePosition:
      type: object
      properties:
        orgId:
          type: string
          description: 组织Id
        orgName:
          type: string
          description: 组织名称
        path:
          type: string
          description: 组织路径
        primary:
          type: boolean
          description: 是否主部门
    # 雇员
    employee:
      type: object
      properties:
        userId:
          type: string
          description: userId
        name:
          type: string
          description: 名称
        avatar:
          type: string
          description: 头像
        mobile:
          type: string
          description: 手机号
        positions:
          type: array
          items:
            $ref: "#/components/schemas/employeePosition"


  responses:
    errorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: INVALID_PARAMETERS
            errorMsg: 非法参数

